{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 A fast and modern graphql client designed with simplicity in mind. Key Features \u00b6 Compatible with Python 3.7 and above Build on top of qlient-core , requests and websocket-client support for subscriptions Help \u00b6 See documentation for more details. If you want more information about the internals, I kindly refer you to the qlient-core documentation . If you are looking for an asynchronous implementation, I kindly refer you to the qlient-aiohttp sister project. Installation \u00b6 pip install qlient Quick Start \u00b6 from qlient.http import HTTPClient , GraphQLResponse client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) res : GraphQLResponse = client . query . film ( # swapi graphql input fields id = \"ZmlsbXM6MQ==\" , # qlient specific _fields = [ \"id\" , \"title\" , \"episodeID\" ] ) print ( res . request . query ) # query film($id: ID) { film(id: $id) { id title episodeID } } print ( res . request . variables ) # {'id': 'ZmlsbXM6MQ=='} print ( res . data ) # {'film': {'id': 'ZmlsbXM6MQ==', 'title': 'A New Hope', 'episodeID': 4}}","title":"Overview"},{"location":"#overview","text":"A fast and modern graphql client designed with simplicity in mind.","title":"Overview"},{"location":"#key-features","text":"Compatible with Python 3.7 and above Build on top of qlient-core , requests and websocket-client support for subscriptions","title":"Key Features"},{"location":"#help","text":"See documentation for more details. If you want more information about the internals, I kindly refer you to the qlient-core documentation . If you are looking for an asynchronous implementation, I kindly refer you to the qlient-aiohttp sister project.","title":"Help"},{"location":"#installation","text":"pip install qlient","title":"Installation"},{"location":"#quick-start","text":"from qlient.http import HTTPClient , GraphQLResponse client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) res : GraphQLResponse = client . query . film ( # swapi graphql input fields id = \"ZmlsbXM6MQ==\" , # qlient specific _fields = [ \"id\" , \"title\" , \"episodeID\" ] ) print ( res . request . query ) # query film($id: ID) { film(id: $id) { id title episodeID } } print ( res . request . variables ) # {'id': 'ZmlsbXM6MQ=='} print ( res . data ) # {'film': {'id': 'ZmlsbXM6MQ==', 'title': 'A New Hope', 'episodeID': 4}}","title":"Quick Start"},{"location":"examples/","text":"Examples \u00b6 This page contains examples from the official swapi-graphql . Query all Films \u00b6 Say you want to list all films on the endpoint. query { allFilms { totalCount films { id title director releaseDate } } } The corresponding code looks like this: from qlient.http import HTTPClient , Fields client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) all_films_fields = Fields ( \"totalCount\" , films = [ \"id\" , \"title\" , \"director\" , \"releaseDate\" ] ) response = client . query . allFilms ( all_films_fields ) (This example is complete and should run \"as is\".) Query film by id \u00b6 Now you've got an id and want the information for that movie. query film($id: ID) { film(id: $id) { id title episodeID director releaseDate } } The corresponding code looks like this: from qlient.http import HTTPClient client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) response = client . query . allFilms ( [ \"id\" , \"title\" , \"episodeID\" , \"director\" , \"releaseDate\" ], id = \"ZmlsbXM6MQ==\" , ) (This example is complete and should run \"as is\".)","title":"Examples"},{"location":"examples/#examples","text":"This page contains examples from the official swapi-graphql .","title":"Examples"},{"location":"examples/#query-all-films","text":"Say you want to list all films on the endpoint. query { allFilms { totalCount films { id title director releaseDate } } } The corresponding code looks like this: from qlient.http import HTTPClient , Fields client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) all_films_fields = Fields ( \"totalCount\" , films = [ \"id\" , \"title\" , \"director\" , \"releaseDate\" ] ) response = client . query . allFilms ( all_films_fields ) (This example is complete and should run \"as is\".)","title":"Query all Films"},{"location":"examples/#query-film-by-id","text":"Now you've got an id and want the information for that movie. query film($id: ID) { film(id: $id) { id title episodeID director releaseDate } } The corresponding code looks like this: from qlient.http import HTTPClient client = HTTPClient ( \"https://swapi-graphql.netlify.app/.netlify/functions/index\" ) response = client . query . allFilms ( [ \"id\" , \"title\" , \"episodeID\" , \"director\" , \"releaseDate\" ], id = \"ZmlsbXM6MQ==\" , ) (This example is complete and should run \"as is\".)","title":"Query film by id"},{"location":"install/","text":"Installation \u00b6 Qlient is a pure-python module. This means that there is no C code which needs to be compiled. This package is build with poetry so installation is as you might expect. pip install qlient or using poetry poetry add qlient","title":"Installation"},{"location":"install/#installation","text":"Qlient is a pure-python module. This means that there is no C code which needs to be compiled. This package is build with poetry so installation is as you might expect. pip install qlient or using poetry poetry add qlient","title":"Installation"}]}